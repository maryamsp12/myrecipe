{"version":3,"sources":["components/search.jsx","components/recipes.jsx","App.js","components/recipe.jsx","components/router.jsx","serviceWorker.js","index.js"],"names":["Search","props","react_default","a","createElement","className","onSubmit","getRecipe","style","marginBottom","type","name","placeholder","Recipes","recipes","map","recipe","key","title","src","image_url","alt","length","concat","substring","publisher","Link","to","pathname","recipe_id","state","App","_callee","e","recipeName","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","sent","json","_this","setState","console","log","stop","this","search","Component","Recipe","activeRecipe","componentDidMount","location","Object","defineProperty","href","publisher_url","Router","BrowserRouter","Switch","Route","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d41c06e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst Search = (props) => {\r\n    return ( \r\n        <div className=\"form\">\r\n        <form onSubmit={props.getRecipe} style={{ marginBottom:\"2rem\" }}>\r\n        <input type='text' name='recipeName' placeholder='Search..' />\r\n        <button className=\"form__button\">Search</button>\r\n    </form>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Search;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Recipes = props => (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n      { props.recipes.map((recipe) => {\r\n        return (\r\n          <div key={recipe.title} className=\"col-md-4\" style={{ marginBottom:\"2rem\" }}>\r\n            <div className=\"recipes__box\">\r\n              <img className=\"recipe__box-img\" src={recipe.image_url} alt={recipe.title}/>\r\n                <div className=\"recipe__text\">\r\n                  <h5 className=\"recipes__title\"> {recipe.title.length < 20 ? `${recipe.title}` : `${recipe.title.substring(0,20)}...`}</h5>\r\n                  <p className=\"recipes__subtitle\">Publisher: <span>{ recipe.publisher }</span></p>\r\n                </div>\r\n                <button className=\"recipe_buttons\">\r\n                  <Link to={{ pathname: `/recipe/${recipe.recipe_id}`,\r\n                  state: { recipe: recipe.title }\r\n                }}> View </Link>\r\n                </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  export default Recipes;\r\n      \r\n      \r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n                        ","import React, { Component } from 'react';\nimport './App.css';\n\nimport Search from './components/search'\nimport Recipes from './components/recipes'\n\n\nconst API_KEY = \"6d40d026896f9301538f52e7b888fd77\"\n\nclass App extends Component {\n  state = {\n    recipes : []\n  }\n\n  getRecipe = async (e) => {\n    e.preventDefault()\n    const recipeName = e.target.elements.recipeName.value\n    \n    const api_call = await fetch(`https://cors-anywhere.herokuapp.com/https://www.food2fork.com/api/search?key=6d40d026896f9301538f52e7b888fd77&q=${recipeName}&count=12`)\n    const data =await api_call.json()\n    \n    this.setState({ recipes : data.recipes})\n    console.log(this.state.recipes)\n\n}\n\n\n\n  render() {\n  \n      return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Recipe Search</h1>\n        </header>\n        \n        <Search getRecipe={this.getRecipe} />\n        <Recipes recipes={this.state.recipes} />\n       \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst API_KEY = \"6d40d026896f9301538f52e7b888fd77\"\r\n\r\nclass Recipe extends Component {\r\n    state = { \r\n        activeRecipe : []\r\n     }\r\n\r\n     \r\n\r\n     componentDidMount = async() => {\r\n        const title = this.props.location.state.recipe\r\n    \r\n        const api_call = await fetch(`https://cors-anywhere.herokuapp.com/https://www.food2fork.com/api/search?key=6d40d026896f9301538f52e7b888fd77&q=${title}`)\r\n        const data = await api_call.json()\r\n        this.setState({ activeRecipe: data.recipes[0]})\r\n        console.log(this.state.activeRecipe)        \r\n    \r\n    }\r\n\r\n    render() { \r\n        console.log(this.props)\r\n\r\n        const recipe = this.state.activeRecipe\r\n        return ( \r\n            <div className=\"container\" className=\"recipe\">\r\n                { this.state.activeRecipe.length !== 0 &&\r\n                <div className=\"active-recipe\">\r\n                <h3 className=\"active-recipe__title\">{recipe.title}</h3>\r\n                <img className=\"active-recipe__img\" src={recipe.image_url} \r\n                alt={recipe.title} />\r\n                \r\n                <h4 className=\"active-recipe__publisher\">Publisher: <span>{recipe.publisher}</span></h4>\r\n                <p className=\"active-recipe__website\">Website: <span><a href={recipe.publisher_url}>{recipe.publisher_url}</a></span></p>\r\n                <button className=\"active-recipe__button\">\r\n                <Link to={{ pathname: \"/\" }}> Go Home </Link>\r\n                </button>\r\n\r\n            </div>}\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Recipe;","import React, { Component } from 'react';\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\r\n\r\nimport App from \"../App\"\r\nimport Recipe from \"./recipe\"\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n    <Switch>\r\n        <Route path=\"/\" component={App} exact/>\r\n        <Route path=\"/recipe\" component={Recipe} />\r\n        </Switch>  \r\n    </BrowserRouter>\r\n    \r\n)\r\n \r\nexport default Router;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './components/router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}